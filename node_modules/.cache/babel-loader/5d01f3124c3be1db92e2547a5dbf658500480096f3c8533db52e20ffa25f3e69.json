{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nexport function useOnDraw(onDraw) {\n  _s();\n  const canvasRef = useRef(null);\n  const isDrawingRef = useRef(false);\n  function setCanvasRef(ref) {\n    if (!ref) return;\n    canvasRef.current = ref;\n    initMouseMoveListener();\n  }\n  function initMouseMoveListener() {\n    const mouseMoveListener = e => {\n      if (isDrawingRef.current == true) {\n        const point = computePointInCanvas(e.clientX, e.clientY);\n        console.log('point:' + point);\n        // const point = {x: e.clientX, y:e.clientY};\n        const ctx = canvasRef.current.getContext('2d');\n        if (onDraw) onDraw(ctx, point);\n      }\n    };\n    window.addEventListener('mousemove', mouseMoveListener);\n  }\n\n  // so that x and y coords are relative to canvas, not entire window\n  function computePointInCanvas(clientX, clientY) {\n    if (canvasRef.current) {\n      const boundingRect = canvasRef.current.getBoundingClientRect();\n      return {\n        x: clientX - boundingRect.left,\n        y: clientY - boundingRect.top\n      };\n    } else {\n      return null;\n    }\n  }\n  return setCanvasRef;\n}\n_s(useOnDraw, \"NCW63lc9V8srPRUVORvnJ1Z+YUk=\");","map":{"version":3,"names":["useEffect","useRef","useOnDraw","onDraw","canvasRef","isDrawingRef","setCanvasRef","ref","current","initMouseMoveListener","mouseMoveListener","e","point","computePointInCanvas","clientX","clientY","console","log","ctx","getContext","window","addEventListener","boundingRect","getBoundingClientRect","x","left","y","top"],"sources":["/Users/anyiwang/Library/CloudStorage/OneDrive-NanyangTechnologicalUniversity/FYP/UI/react_basics/reactapp1/src/components/hooks.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function useOnDraw(onDraw){\n    const canvasRef = useRef(null);\n\n    const isDrawingRef = useRef(false);\n\n    function setCanvasRef(ref){\n        if(!ref) return;\n        canvasRef.current = ref;\n        initMouseMoveListener();\n    }\n\n    function initMouseMoveListener(){\n        const mouseMoveListener = (e) =>{\n            if(isDrawingRef.current == true){\n                const point = computePointInCanvas(e.clientX, e.clientY);\n                console.log('point:' + point)\n                // const point = {x: e.clientX, y:e.clientY};\n                const ctx = canvasRef.current.getContext('2d');\n                if(onDraw) onDraw(ctx, point);\n            }\n        }\n        window.addEventListener('mousemove', mouseMoveListener)\n    }\n\n    // so that x and y coords are relative to canvas, not entire window\n    function computePointInCanvas(clientX, clientY){\n        if(canvasRef.current){\n            const boundingRect = canvasRef.current.getBoundingClientRect();\n            return{\n                x: clientX - boundingRect.left,\n                y: clientY - boundingRect.top\n            }\n        } else{\n            return null;\n        }\n        \n    }\n\n    return setCanvasRef;\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,OAAO,SAASC,SAAS,CAACC,MAAM,EAAC;EAAA;EAC7B,MAAMC,SAAS,GAAGH,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMI,YAAY,GAAGJ,MAAM,CAAC,KAAK,CAAC;EAElC,SAASK,YAAY,CAACC,GAAG,EAAC;IACtB,IAAG,CAACA,GAAG,EAAE;IACTH,SAAS,CAACI,OAAO,GAAGD,GAAG;IACvBE,qBAAqB,EAAE;EAC3B;EAEA,SAASA,qBAAqB,GAAE;IAC5B,MAAMC,iBAAiB,GAAIC,CAAC,IAAI;MAC5B,IAAGN,YAAY,CAACG,OAAO,IAAI,IAAI,EAAC;QAC5B,MAAMI,KAAK,GAAGC,oBAAoB,CAACF,CAAC,CAACG,OAAO,EAAEH,CAAC,CAACI,OAAO,CAAC;QACxDC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGL,KAAK,CAAC;QAC7B;QACA,MAAMM,GAAG,GAAGd,SAAS,CAACI,OAAO,CAACW,UAAU,CAAC,IAAI,CAAC;QAC9C,IAAGhB,MAAM,EAAEA,MAAM,CAACe,GAAG,EAAEN,KAAK,CAAC;MACjC;IACJ,CAAC;IACDQ,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEX,iBAAiB,CAAC;EAC3D;;EAEA;EACA,SAASG,oBAAoB,CAACC,OAAO,EAAEC,OAAO,EAAC;IAC3C,IAAGX,SAAS,CAACI,OAAO,EAAC;MACjB,MAAMc,YAAY,GAAGlB,SAAS,CAACI,OAAO,CAACe,qBAAqB,EAAE;MAC9D,OAAM;QACFC,CAAC,EAAEV,OAAO,GAAGQ,YAAY,CAACG,IAAI;QAC9BC,CAAC,EAAEX,OAAO,GAAGO,YAAY,CAACK;MAC9B,CAAC;IACL,CAAC,MAAK;MACF,OAAO,IAAI;IACf;EAEJ;EAEA,OAAOrB,YAAY;AACvB;AAAC,GAvCeJ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
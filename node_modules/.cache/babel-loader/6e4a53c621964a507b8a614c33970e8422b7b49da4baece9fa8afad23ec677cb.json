{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nexport function useOnDraw(onDraw) {\n  _s();\n  const canvasRef = useRef(null);\n  const isDrawingRef = useRef(false);\n  const mouseMoveListenerRef = useRef(null);\n  const mouseDownListenerRef = useRef(null);\n  const mouseUpListenerRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      if (mouseMoveListenerRef.current) {\n        window.removeEventListener(\"mousemove\", mouseMoveListenerRef.current);\n      }\n      if (mouseUpListenerRef.current) {\n        window.removeEventListener(\"mouseup\", mouseUpListenerRef.current);\n      }\n    };\n  });\n  function setCanvasRef(ref) {\n    if (!ref) return;\n    canvasRef.current.removeEventListener(\"mousedown\", mouseDownListenerRef.current);\n    canvasRef.current = ref;\n    initMouseMoveListener();\n    initMouseDownListener();\n    initMouseUpListener();\n  }\n  function initMouseMoveListener() {\n    const mouseMoveListener = e => {\n      if (isDrawingRef.current == true) {\n        const point = computePointInCanvas(e.clientX, e.clientY);\n        console.log('point:' + point);\n        // const point = {x: e.clientX, y:e.clientY};\n        const ctx = canvasRef.current.getContext('2d');\n        if (onDraw) onDraw(ctx, point);\n      }\n    };\n    mouseMoveListenerRef.current = mouseMoveListener;\n    window.addEventListener('mousemove', mouseMoveListener);\n  }\n  function initMouseDownListener() {\n    if (!canvasRef.current) return;\n    const listener = () => {\n      isDrawingRef.current = true;\n    };\n    mouseDownListenerRef.current = listener;\n    canvasRef.current.addEventListener(\"mousedown\", listener);\n  }\n  function initMouseUpListener() {\n    if (!canvasRef.current) return;\n    const listener = () => {\n      isDrawingRef.current = false;\n    };\n    mouseUpListenerRef.current = listener;\n    window.addEventListener(\"mouseup\", listener);\n  }\n\n  // so that x and y coords are relative to canvas, not entire window\n  function computePointInCanvas(clientX, clientY) {\n    if (canvasRef.current) {\n      const boundingRect = canvasRef.current.getBoundingClientRect();\n      return {\n        x: clientX - boundingRect.left,\n        y: clientY - boundingRect.top\n      };\n    } else {\n      return null;\n    }\n  }\n  return setCanvasRef;\n}\n_s(useOnDraw, \"eVCpjS4KqCropBSa8+sN4+9SJJg=\");","map":{"version":3,"names":["useEffect","useRef","useOnDraw","onDraw","canvasRef","isDrawingRef","mouseMoveListenerRef","mouseDownListenerRef","mouseUpListenerRef","current","window","removeEventListener","setCanvasRef","ref","initMouseMoveListener","initMouseDownListener","initMouseUpListener","mouseMoveListener","e","point","computePointInCanvas","clientX","clientY","console","log","ctx","getContext","addEventListener","listener","boundingRect","getBoundingClientRect","x","left","y","top"],"sources":["/Users/anyiwang/Library/CloudStorage/OneDrive-NanyangTechnologicalUniversity/FYP/UI/react_basics/reactapp1/src/components/hooks.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function useOnDraw(onDraw){\n    const canvasRef = useRef(null);\n\n    const isDrawingRef = useRef(false);\n\n    const mouseMoveListenerRef = useRef(null);\n    const mouseDownListenerRef = useRef(null);\n    const mouseUpListenerRef = useRef(null);\n\n    useEffect(() => {\n        return () => {\n            if(mouseMoveListenerRef.current) {\n                window.removeEventListener(\"mousemove\", mouseMoveListenerRef.current)\n            }\n            if(mouseUpListenerRef.current) {\n                window.removeEventListener(\"mouseup\", mouseUpListenerRef.current)\n            }\n        }\n    })\n\n    function setCanvasRef(ref){\n        if(!ref) return;\n        canvasRef.current.removeEventListener(\"mousedown\", mouseDownListenerRef.current);\n        canvasRef.current = ref;\n        initMouseMoveListener();\n        initMouseDownListener();\n        initMouseUpListener();\n    }\n\n    function initMouseMoveListener(){\n        const mouseMoveListener = (e) =>{\n            if(isDrawingRef.current == true){\n                const point = computePointInCanvas(e.clientX, e.clientY);\n                console.log('point:' + point)\n                // const point = {x: e.clientX, y:e.clientY};\n                const ctx = canvasRef.current.getContext('2d');\n                if(onDraw) onDraw(ctx, point);\n            }\n        }\n        mouseMoveListenerRef.current = mouseMoveListener;\n        window.addEventListener('mousemove', mouseMoveListener)\n    }\n\n    function initMouseDownListener(){\n        if (!canvasRef.current) return;\n        const listener = () => {\n            isDrawingRef.current = true;\n        }\n        mouseDownListenerRef.current = listener;\n        canvasRef.current.addEventListener(\"mousedown\", listener);\n    }\n\n    function initMouseUpListener(){\n        if (!canvasRef.current) return;\n        const listener = () => {\n            isDrawingRef.current = false;\n        }\n        mouseUpListenerRef.current = listener;\n        window.addEventListener(\"mouseup\", listener);\n    }\n\n    // so that x and y coords are relative to canvas, not entire window\n    function computePointInCanvas(clientX, clientY){\n        if(canvasRef.current){\n            const boundingRect = canvasRef.current.getBoundingClientRect();\n            return{\n                x: clientX - boundingRect.left,\n                y: clientY - boundingRect.top\n            }\n        } else{\n            return null;\n        }\n        \n    }\n\n    return setCanvasRef;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nexport function useOnDraw(onDraw) {\n  _s();\n  const canvasRef = useRef(null);\n  const isDrawingRef = useRef(false);\n  const prevPointRef = useRef(null);\n\n  // //removing listeners\n  // const mouseMoveListenerRef = useRef(null);\n  // const mouseDownListenerRef = useRef(null);\n  // const mouseUpListenerRef = useRef(null);\n\n  // useEffect(() => {\n  //     return () => {\n  //         if(mouseMoveListenerRef.current) {\n  //             window.removeEventListener(\"mousemove\", mouseMoveListenerRef.current)\n  //         }\n  //         if(mouseUpListenerRef.current) {\n  //             window.removeEventListener(\"mouseup\", mouseUpListenerRef.current)\n  //         }\n  //         if(canvasRef.current){\n  //             window.removeEventListener(\"mousedown\", mouseDownListenerRef.current);\n  //         }\n  //     }\n  // })\n\n  function setCanvasRef(ref) {\n    if (!ref) return;\n    canvasRef.current = ref;\n    initMouseMoveListener();\n    initMouseDownListener();\n    initMouseUpListener();\n  }\n  function initMouseMoveListener() {\n    const mouseMoveListener = e => {\n      if (isDrawingRef.current == true) {\n        const point = computePointInCanvas(e.clientX, e.clientY);\n        // const point = {x: e.clientX, y:e.clientY};\n        const ctx = canvasRef.current.getContext('2d');\n        if (onDraw) onDraw(ctx, point, prevPointRef.current);\n        prevPointRef.current = point;\n      }\n    };\n    // mouseMoveListenerRef.current = mouseMoveListener;\n    window.addEventListener('mousemove', mouseMoveListener);\n  }\n  function initMouseDownListener() {\n    if (!canvasRef.current) return;\n    const listener = () => {\n      isDrawingRef.current = true;\n    };\n    // mouseDownListenerRef.current = listener;\n    window.addEventListener(\"mousedown\", listener);\n  }\n  function initMouseUpListener() {\n    if (!canvasRef.current) return;\n    const listener = () => {\n      isDrawingRef.current = false;\n      prevPointRef.current = null;\n    };\n    // mouseUpListenerRef.current = listener;\n    window.addEventListener(\"mouseup\", listener);\n  }\n\n  // so that x and y coords are relative to canvas, not entire window\n  function computePointInCanvas(clientX, clientY) {\n    if (canvasRef.current) {\n      const boundingRect = canvasRef.current.getBoundingClientRect();\n      // console.log('top:'+ boundingRect.top + ', left:'+boundingRect.left)\n      // console.log('bottom:'+ boundingRect.bottom + ', right:'+boundingRect.right)\n      // console.log('wwidth' + window.innerWidth)\n      // console.log('wwheight' + window.innerHeight)\n\n      return {\n        x: clientX - boundingRect.left,\n        y: clientY - boundingRect.top\n      };\n    } else {\n      return null;\n    }\n  }\n  return setCanvasRef;\n}\n_s(useOnDraw, \"ckDrpL9/S8OJ+gMDuEVhsrVMHDc=\");","map":{"version":3,"names":["useEffect","useRef","useOnDraw","onDraw","canvasRef","isDrawingRef","prevPointRef","setCanvasRef","ref","current","initMouseMoveListener","initMouseDownListener","initMouseUpListener","mouseMoveListener","e","point","computePointInCanvas","clientX","clientY","ctx","getContext","window","addEventListener","listener","boundingRect","getBoundingClientRect","x","left","y","top"],"sources":["/Users/anyiwang/Library/CloudStorage/OneDrive-NanyangTechnologicalUniversity/FYP/UI/react_basics/reactapp1/src/components/hooks.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function useOnDraw(onDraw){\n    const canvasRef = useRef(null);\n\n    const isDrawingRef = useRef(false);\n\n    const prevPointRef = useRef(null);\n\n    // //removing listeners\n    // const mouseMoveListenerRef = useRef(null);\n    // const mouseDownListenerRef = useRef(null);\n    // const mouseUpListenerRef = useRef(null);\n\n    // useEffect(() => {\n    //     return () => {\n    //         if(mouseMoveListenerRef.current) {\n    //             window.removeEventListener(\"mousemove\", mouseMoveListenerRef.current)\n    //         }\n    //         if(mouseUpListenerRef.current) {\n    //             window.removeEventListener(\"mouseup\", mouseUpListenerRef.current)\n    //         }\n    //         if(canvasRef.current){\n    //             window.removeEventListener(\"mousedown\", mouseDownListenerRef.current);\n    //         }\n    //     }\n    // })\n\n    function setCanvasRef(ref){\n        if(!ref) return;\n        \n        canvasRef.current = ref;\n        initMouseMoveListener();\n        initMouseDownListener();\n        initMouseUpListener();\n    }\n\n    function initMouseMoveListener(){\n        const mouseMoveListener = (e) =>{\n            if(isDrawingRef.current == true){\n                const point = computePointInCanvas(e.clientX, e.clientY);\n                // const point = {x: e.clientX, y:e.clientY};\n                const ctx = canvasRef.current.getContext('2d');\n                if(onDraw) onDraw(ctx, point, prevPointRef.current);\n                prevPointRef.current = point;\n            }\n        }\n        // mouseMoveListenerRef.current = mouseMoveListener;\n        window.addEventListener('mousemove', mouseMoveListener)\n    }\n\n    function initMouseDownListener(){\n        if (!canvasRef.current) return;\n        const listener = () => {\n            isDrawingRef.current = true;\n        }\n        // mouseDownListenerRef.current = listener;\n        window.addEventListener(\"mousedown\", listener);\n    }\n\n    function initMouseUpListener(){\n        if (!canvasRef.current) return;\n        const listener = () => {\n            isDrawingRef.current = false;\n            prevPointRef.current = null;\n        }\n        // mouseUpListenerRef.current = listener;\n        window.addEventListener(\"mouseup\", listener);\n    }\n\n    // so that x and y coords are relative to canvas, not entire window\n    function computePointInCanvas(clientX, clientY){\n        if(canvasRef.current){\n            const boundingRect = canvasRef.current.getBoundingClientRect();\n            // console.log('top:'+ boundingRect.top + ', left:'+boundingRect.left)\n            // console.log('bottom:'+ boundingRect.bottom + ', right:'+boundingRect.right)\n            // console.log('wwidth' + window.innerWidth)\n            // console.log('wwheight' + window.innerHeight)\n\n            return{\n                x: (clientX - boundingRect.left),\n                y: (clientY - boundingRect.top)\n            }\n\n        } else{\n            return null;\n        }\n        \n    }\n\n    return setCanvasRef;\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,OAAO,SAASC,SAAS,CAACC,MAAM,EAAC;EAAA;EAC7B,MAAMC,SAAS,GAAGH,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMI,YAAY,GAAGJ,MAAM,CAAC,KAAK,CAAC;EAElC,MAAMK,YAAY,GAAGL,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASM,YAAY,CAACC,GAAG,EAAC;IACtB,IAAG,CAACA,GAAG,EAAE;IAETJ,SAAS,CAACK,OAAO,GAAGD,GAAG;IACvBE,qBAAqB,EAAE;IACvBC,qBAAqB,EAAE;IACvBC,mBAAmB,EAAE;EACzB;EAEA,SAASF,qBAAqB,GAAE;IAC5B,MAAMG,iBAAiB,GAAIC,CAAC,IAAI;MAC5B,IAAGT,YAAY,CAACI,OAAO,IAAI,IAAI,EAAC;QAC5B,MAAMM,KAAK,GAAGC,oBAAoB,CAACF,CAAC,CAACG,OAAO,EAAEH,CAAC,CAACI,OAAO,CAAC;QACxD;QACA,MAAMC,GAAG,GAAGf,SAAS,CAACK,OAAO,CAACW,UAAU,CAAC,IAAI,CAAC;QAC9C,IAAGjB,MAAM,EAAEA,MAAM,CAACgB,GAAG,EAAEJ,KAAK,EAAET,YAAY,CAACG,OAAO,CAAC;QACnDH,YAAY,CAACG,OAAO,GAAGM,KAAK;MAChC;IACJ,CAAC;IACD;IACAM,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAET,iBAAiB,CAAC;EAC3D;EAEA,SAASF,qBAAqB,GAAE;IAC5B,IAAI,CAACP,SAAS,CAACK,OAAO,EAAE;IACxB,MAAMc,QAAQ,GAAG,MAAM;MACnBlB,YAAY,CAACI,OAAO,GAAG,IAAI;IAC/B,CAAC;IACD;IACAY,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEC,QAAQ,CAAC;EAClD;EAEA,SAASX,mBAAmB,GAAE;IAC1B,IAAI,CAACR,SAAS,CAACK,OAAO,EAAE;IACxB,MAAMc,QAAQ,GAAG,MAAM;MACnBlB,YAAY,CAACI,OAAO,GAAG,KAAK;MAC5BH,YAAY,CAACG,OAAO,GAAG,IAAI;IAC/B,CAAC;IACD;IACAY,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEC,QAAQ,CAAC;EAChD;;EAEA;EACA,SAASP,oBAAoB,CAACC,OAAO,EAAEC,OAAO,EAAC;IAC3C,IAAGd,SAAS,CAACK,OAAO,EAAC;MACjB,MAAMe,YAAY,GAAGpB,SAAS,CAACK,OAAO,CAACgB,qBAAqB,EAAE;MAC9D;MACA;MACA;MACA;;MAEA,OAAM;QACFC,CAAC,EAAGT,OAAO,GAAGO,YAAY,CAACG,IAAK;QAChCC,CAAC,EAAGV,OAAO,GAAGM,YAAY,CAACK;MAC/B,CAAC;IAEL,CAAC,MAAK;MACF,OAAO,IAAI;IACf;EAEJ;EAEA,OAAOtB,YAAY;AACvB;AAAC,GAzFeL,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}